@page "/blog/{urlHandle}"
@model Assignment2PRN221_BlogPost.Pages.Blog.DetailsModel
@using Newtonsoft.Json
@using Assignment2PRN221_BlogPost.ViewModels
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    var userType = HttpContextAccessor.HttpContext?.Session.GetString("role");
    var loginUserJson = HttpContextAccessor.HttpContext?.Session.GetString("loginUser");
    var loginUser = loginUserJson != null && loginUserJson.Trim() != ""
    ? JsonConvert.DeserializeObject<AppUser>(loginUserJson) : null;
}

@if (Model.BlogPost != null)
{
    <div class="container my-5">
        <div class="row justify-content-center">
            <div class="col-12 col-lg-6">

                @{
                    ViewData["Title"] = Model.BlogPost.PageTitle;
                }

                <h1 class="mb-3">@Model.BlogPost.Heading</h1>

                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">@Model.BlogPost.Account.Name</span>
                    <span class="text-secondary">@Model.BlogPost.PublishedDate.ToShortDateString()</span>
                </div>

                <div class="mb-3">
                    @if (Model.BlogPost.Tags != null)
                    {
                        foreach (var tag in Model.BlogPost.Tags)
                        {
                            <a href="/tags/@tag.Name">
                                <span class="badge bg-dark">@tag.Name</span>
                            </a>

                        }
                    }
                </div>

                <img src="@Model.BlogPost.ImageUrl" class="d-block img-fluid mb-3" />

                <div class="mb-3 blog-details">
                    @Html.Raw(Model.BlogPost.Content)
                </div>
            </div>
        </div>
    </div>

}
else
{
    <div class="container mt-3">
        <h2>Blog post not found!</h2>
    </div>
}
}
